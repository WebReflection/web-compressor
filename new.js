var webCompressor=function(e){"use strict";
/*! (c) Andrea Giammarchi @WebReflection */const{ceil:t}=Math,{fromCharCode:r}=String,s=e=>{const t=[],r=e.length-1;for(let s=0;s<r;s++){const r=e.charCodeAt(s);t.push(r>>8,255&r)}return e.charCodeAt(r)&&t.pop(),Uint8Array.from(t)},{fromCharCode:n}=String,o=e=>e.charCodeAt(0),a=e=>Uint8Array.from(atob(e),o);var i=e=>({get:t=>e.get(t),set:(t,r)=>(e.set(t,r),r)})
/*! (c) Andrea Giammarchi @WebReflection */;const{defineProperty:c}=Object,h=i(new WeakMap),p=i(new WeakMap),u={value(){return h.get(this)||h.set(this,(e=>{let s=0;const n=[],{length:o}=e,a=t(o/2);for(let t=0,i=0;i<a;i++)n.push(r((e[t++]<<8)+(t<o?e[t++]:s++)));return n.push(r(s)),n.join("")})(new Uint8Array(this)))}},d={value(){return p.get(this)||p.set(this,(e=>{const t=[];for(let r=0,{length:s}=e;r<s;r++)t.push(n(e[r]));return btoa(t.join(""))})(new Uint8Array(this)))}},f=(e,t)=>new Response(new Blob([t]).stream().pipeThrough(e)).arrayBuffer();return e.default=class{constructor(e="deflate",t="base64"){const r="utf-16"===t;this.compress=this.compress.bind(this,e,r?u:d),this.decompress=this.decompress.bind(this,e,r?s:a)}async compress(e,t,r){return c(await f(new CompressionStream(e),"string"==typeof r?(new TextEncoder).encode(r):r),"toString",t)}async decompress(e,t,r){return(new TextDecoder).decode(await f(new DecompressionStream(e),"string"==typeof r?t(r):r))}},e}({}).default;
