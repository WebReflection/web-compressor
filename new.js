var webCompressor=function(e){"use strict";
/*! (c) Andrea Giammarchi @WebReflection */const{ceil:t}=Math,{fromCharCode:r}=String,s=e=>{const t=[],r=e.length-1;for(let s=0;s<r;s++){const r=e.charCodeAt(s);t.push(r>>8,255&r)}return e.charCodeAt(r)&&t.pop(),Uint8Array.from(t)},{fromCharCode:n}=String,o=e=>e.charCodeAt(0),a=e=>Uint8Array.from(atob(e),o)
/*! (c) Andrea Giammarchi @WebReflection */,{defineProperty:i}=Object,c=new WeakMap,p=new WeakMap,h={value(){let e=c.get(this);return e||c.set(this,e=(e=>{let s=0;const{length:n}=e,o=t(n/2),a=new Uint16Array(o+1);for(let t=0,r=0;r<o;r++){const o=e[t++]<<8;a[r]=o+(t<n?e[t++]:s++)}return a[o]=s,r.apply(null,a)})(new Uint8Array(this))),e}},l={value(){let e=p.get(this);var t;return e||p.set(this,(t=new Uint8Array(this),e=btoa(n.apply(null,t)))),e}},u=(e,t)=>new Response(new Blob([t]).stream().pipeThrough(e)).arrayBuffer();return e.default=class{constructor(e="deflate",t="base64"){const r="utf-16"===t;this.compress=this.compress.bind(this,e,r?h:l),this.decompress=this.decompress.bind(this,e,r?s:a)}async compress(e,t,r){return i(await u(new CompressionStream(e),"string"==typeof r?(new TextEncoder).encode(r):r),"toString",t)}async decompress(e,t,r){return(new TextDecoder).decode(await u(new DecompressionStream(e),"string"==typeof r?t(r):r))}},e}({}).default;
